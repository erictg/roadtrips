directive @goField(
	forceResolver: Boolean
	name: String
  omittable: Boolean
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

schema {
    query: Query
}

type Query {
    randomDestinationWithinRing(args: RandomDestinationWithinRing!): Destination!

    randomDestinationsWithinRing(args: RandomDestinationsWithinRing!): [Destination!]!
}

enum LengthUnit {
    Miles
    Kilometers
}

input Length {
    value: Float!
    unit: LengthUnit!
}

input Point {
    latitude: Float!
    longitude: Float!
}

input Ring {
    center: Point!
    innerRadius: Length!
    outerRadius: Length!
}

enum DestinationType {
    Restaurant
}

input DestinationFilters {
    type: DestinationType!
}

input RandomDestinationWithinRing {
    filters: DestinationFilters
    ring: Ring!
}

input RandomDestinationsWithinRing {
    filters: DestinationFilters
    ring: Ring!
}

# Duration represents some duration of time. Possibly in seconds but TBD.
scalar Duration

interface Destination {
    latitude: Float!
    longitude: Float!
    name: String!
    estimatedTravelTime(origin: Point!): Duration! 
}

type Restaurant implements Destination {
    # required by interface
    latitude: Float!
    longitude: Float!
    name: String!
    estimatedTravelTime(origin: Point!): Duration! @goField(forceResolver: true)

    # restaurant stuff
    rating: Float
    numRatings: Int
    types: [String!]!
    hours: [String!]!
    iconURL: String
}
